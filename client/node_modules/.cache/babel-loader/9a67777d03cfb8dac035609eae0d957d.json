{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/radsaskara/Documents/Udemy/ZTM React/crown-cloth/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionOverview from '../../component/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { fetchCollectionStartAsync } from '../../redux/shop/shop.action';\nimport { selectIsColletion } from '../../redux/shop/shop.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport withSpinner from '../../component/spinner/spinner.component';\nconst CollectionOverviewWithSpinner = withSpinner(CollectionOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      ffetchCollectionStartAsync\n    } = this.props;\n    ffetchCollectionStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 71\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsColletion\n});\n\nconst mapDispatchToProps = dispatch => ({\n  ffetchCollectionStartAsync: () => dispatch(fetchCollectionStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/Users/radsaskara/Documents/Udemy/ZTM React/crown-cloth/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionOverview","CollectionPage","connect","fetchCollectionStartAsync","selectIsColletion","createStructuredSelector","withSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","ffetchCollectionStartAsync","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,kBAAP,MAA+B,qEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,yBAAT,QAA0C,8BAA1C;AACA,SAASC,iBAAT,QAAiC,iCAAjC;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACN,kBAAD,CAAjD;KAAMO,6B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;MAAMO,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAEpCC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACC,MAAAA;AAAD,QAA+B,KAAKC,KAA1C;AACAD,IAAAA,0BAA0B;AAE3B;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAA+B,KAAKH,KAA1C;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGJ,KAAD,iBAAS,QAAC,6BAAD;AAA+B,UAAA,SAAS,EAAEG,oBAA1C;AAAA,aAAoEH;AAApE;AAAA;AAAA;AAAA;AAAA;AAArD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGJ,KAAD,iBAAU,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEG,oBAAtC;AAAA,aAAgEH;AAAhE;AAAA;AAAA;AAAA;AAAA;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAhBmC;;AAmBtC,MAAMK,eAAe,GAAGb,wBAAwB,CAAC;AAC/CW,EAAAA,oBAAoB,EAAGZ;AADwB,CAAD,CAAhD;;AAIA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACtCR,EAAAA,0BAA0B,EAAE,MAAMQ,QAAQ,CAACjB,yBAAyB,EAA1B;AADJ,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAACgB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CV,QAA5C,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom'\nimport CollectionOverview from '../../component/collections-overview/collections-overview.component'\nimport CollectionPage from '../collection/collection.component'\nimport {connect} from 'react-redux'\nimport { fetchCollectionStartAsync } from '../../redux/shop/shop.action';\nimport { selectIsColletion} from '../../redux/shop/shop.selectors';\nimport {createStructuredSelector} from 'reselect'\nimport withSpinner from '../../component/spinner/spinner.component';\n\nconst CollectionOverviewWithSpinner = withSpinner(CollectionOverview)\nconst CollectionPageWithSpinner = withSpinner(CollectionPage)\n\nclass ShopPage extends React.Component{\n\n  componentDidMount(){\n    const {ffetchCollectionStartAsync} = this.props;\n    ffetchCollectionStartAsync();\n    \n  }\n\n  render() {\n    const {match,isCollectionFetching} = this.props\n    return(\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`} render={(props)=><CollectionOverviewWithSpinner isLoading={isCollectionFetching} {...props}/>} />\n        <Route path={`${match.path}/:collectionId`} render={(props)=> <CollectionPageWithSpinner isLoading={isCollectionFetching} {...props}/> } />\n      </div>\n    )\n  }\n} \n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching : selectIsColletion\n})\n\nconst mapDispatchToProps = dispatch => ({\n  ffetchCollectionStartAsync: () => dispatch(fetchCollectionStartAsync())\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}