{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/radsaskara/Documents/Udemy/ZTM React/crown-cloth/client/src/component/signin/signin.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './signin.styles.scss';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\n\nconst Signin = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredential, setCredential] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredential;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setCredential({ ...userCredential,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign In with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        handleChange: handleChange,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          value: \"Sign In\",\n          children: \" Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \" Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signin, \"urUPEivchi2GyHdRcjaURORsuog=\");\n\n_c = Signin;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(Signin);\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["/Users/radsaskara/Documents/Udemy/ZTM React/crown-cloth/client/src/component/signin/signin.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","googleSignInStart","emailSignInStart","Signin","userCredential","setCredential","email","password","handleSubmit","e","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\nimport './signin.styles.scss'\nimport {connect} from 'react-redux'\nimport {googleSignInStart,emailSignInStart} from '../../redux/user/user.action'\n\nconst Signin = ({emailSignInStart,googleSignInStart}) => {\n\n  const [userCredential,setCredential] = useState({email:'',password:''})\n  \n  const {email,password} = userCredential;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    emailSignInStart(email,password)\n  }\n\n  const handleChange = e => {\n    const {value,name} = e.target\n\n    setCredential({...userCredential,[name]:value})\n  }\n\n  return(\n    <div className='sign-in'>\n      <h2 className='title'>I already have an account</h2>\n      <span>Sign In with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput name=\"email\" type=\"email\" value={email} handleChange={handleChange} label=\"email\" required />\n        <FormInput name=\"password\" type=\"password\" value={password} handleChange={handleChange} label=\"password\" required />\n\n        <div className='buttons'>\n          <CustomButton type=\"submit\" value=\"Sign In\"> Sign In</CustomButton>\n          <CustomButton  type=\"button\" onClick={googleSignInStart} isGoogleSignIn> Sign In With Google</CustomButton>\n        </div>\n      </form>\n    </div>\n  )\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart : () => dispatch(googleSignInStart()),\n  emailSignInStart : (email,password) => dispatch(emailSignInStart({email,password}))\n})\n\nexport default connect(null,mapDispatchToProps)(Signin);"]},"metadata":{},"sourceType":"module"}