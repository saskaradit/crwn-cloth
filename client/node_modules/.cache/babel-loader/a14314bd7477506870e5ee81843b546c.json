{"ast":null,"code":"export const addItemToCart = (cartItems, item) => {\n  const existingCart = cartItems.find(cartItem => cartItem.id === item.id);\n\n  if (existingCart) {\n    return cartItems.map(cartItem => cartItem.id === item.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...item,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, removeItem) => {\n  const currentCart = cartItems.find(item => item.id === removeItem.id);\n\n  if (currentCart.quantity === 1) {\n    return cartItems.filter(item => item.id !== removeItem.id);\n  }\n\n  return cartItems.map(item => item.id === removeItem.id ? { ...item,\n    quantity: item.quantity - 1\n  } : item);\n};","map":{"version":3,"sources":["/Users/radsaskara/Documents/Udemy/ZTM React/crown-cloth/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","item","existingCart","find","cartItem","id","map","quantity","removeItemFromCart","removeItem","currentCart","filter"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,IAAZ,KAAoB;AAC/C,QAAMC,YAAY,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,IAAI,CAACI,EAAhD,CAArB;;AAEA,MAAGH,YAAH,EAAgB;AACd,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,IAAI,CAACI,EAArB,GAA0B,EAAC,GAAGD,QAAJ;AAAaG,MAAAA,QAAQ,EAACH,QAAQ,CAACG,QAAT,GAAkB;AAAxC,KAA1B,GAAuEH,QAAjG,CAAP;AACD;;AAED,SAAM,CAAC,GAAGJ,SAAJ,EAAc,EAAC,GAAGC,IAAJ;AAASM,IAAAA,QAAQ,EAAC;AAAlB,GAAd,CAAN;AACD,CARM;AAUP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAWS,UAAX,KAAwB;AACxD,QAAMC,WAAW,GAAGV,SAAS,CAACG,IAAV,CAClBF,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYI,UAAU,CAACJ,EADb,CAApB;;AAGA,MAAGK,WAAW,CAACH,QAAZ,KAAuB,CAA1B,EAA4B;AAC1B,WAAOP,SAAS,CAACW,MAAV,CAAiBV,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYI,UAAU,CAACJ,EAAhD,CAAP;AACD;;AAED,SAAOL,SAAS,CAACM,GAAV,CACLL,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYI,UAAU,CAACJ,EAAvB,GAA4B,EAAC,GAAGJ,IAAJ;AAAUM,IAAAA,QAAQ,EAAEN,IAAI,CAACM,QAAL,GAAc;AAAlC,GAA5B,GAAmEN,IADtE,CAAP;AAGD,CAXM","sourcesContent":["export const addItemToCart = (cartItems, item) =>{\n  const existingCart = cartItems.find(cartItem => cartItem.id === item.id)\n\n  if(existingCart){\n    return cartItems.map(cartItem => cartItem.id === item.id ? {...cartItem,quantity:cartItem.quantity+1} : cartItem)\n  }\n\n  return[...cartItems,{...item,quantity:1}]\n}\n\nexport const removeItemFromCart = (cartItems,removeItem)=>{\n  const currentCart = cartItems.find(\n    item => item.id === removeItem.id\n  )\n  if(currentCart.quantity===1){\n    return cartItems.filter(item => item.id !== removeItem.id)\n  }\n\n  return cartItems.map(\n    item => item.id === removeItem.id ? {...item, quantity: item.quantity-1} : item\n  )\n}"]},"metadata":{},"sourceType":"module"}