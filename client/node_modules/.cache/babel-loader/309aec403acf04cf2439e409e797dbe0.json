{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport userReducer from './user/user.reducer';\nimport cartReducer from './cart/cart.reducer';\nimport shopReducer from './shop/shop.reducers';\nimport directoryReducer from './directory/directory.reducer';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart']\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n}); // export default combineReducers({\n//   user: userReducer,\n//   cart: cartReducer\n// }) \n// before local storage\n\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/radsaskara/Documents/Udemy/ZTM React/crown-cloth/client/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","shopReducer","directoryReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory","shop"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAC,MADgB;AAEpBN,EAAAA,OAFoB;AAGpBO,EAAAA,SAAS,EAAC,CAAC,MAAD;AAHU,CAAtB;AAMA,MAAMC,WAAW,GAAGV,eAAe,CAAC;AAClCW,EAAAA,IAAI,EAAER,WAD4B;AAElCS,EAAAA,IAAI,EAAER,WAF4B;AAGlCS,EAAAA,SAAS,EAAEP,gBAHuB;AAIlCQ,EAAAA,IAAI,EAAET;AAJ4B,CAAD,CAAnC,C,CAOA;AACA;AACA;AACA;AACA;;AAGA,eAAeJ,cAAc,CAACM,aAAD,EAAeG,WAAf,CAA7B","sourcesContent":["import {combineReducers} from 'redux';\nimport {persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage';\n\nimport userReducer from './user/user.reducer'\nimport cartReducer from './cart/cart.reducer'\nimport shopReducer from './shop/shop.reducers'\nimport directoryReducer from './directory/directory.reducer'\n\nconst persistConfig = {\n  key:'root',\n  storage,\n  whitelist:['cart']\n}\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n})\n\n// export default combineReducers({\n//   user: userReducer,\n//   cart: cartReducer\n// }) \n// before local storage\n\n\nexport default persistReducer(persistConfig,rootReducer);"]},"metadata":{},"sourceType":"module"}