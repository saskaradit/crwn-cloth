{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/radsaskara/Documents/Udemy/ZTM React/crown-cloth/src/component/signin/signin.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './signin.styles.scss';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\n\nclass Signin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign In with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          value: this.state.email,\n          handleChange: this.handleChange,\n          label: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          label: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            value: \"Sign In\",\n            children: \" Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \" Sign In With Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(Signin);","map":{"version":3,"sources":["/Users/radsaskara/Documents/Udemy/ZTM React/crown-cloth/src/component/signin/signin.component.jsx"],"names":["React","FormInput","CustomButton","connect","googleSignInStart","emailSignInStart","Signin","Component","constructor","props","handleSubmit","e","preventDefault","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\nimport './signin.styles.scss'\nimport {connect} from 'react-redux'\nimport {googleSignInStart,emailSignInStart} from '../../redux/user/user.action'\n\nclass Signin extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state ={\n      email:'',\n      password:''\n    }\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const {emailSignInStart} = this.props\n    const {email,password} = this.state;\n\n    emailSignInStart(email,password)\n  }\n\n  handleChange = e => {\n    const {value,name} = e.target\n\n    this.setState({[name]:value})\n  }\n\n  render(){\n    const {googleSignInStart} = this.props\n    return(\n      <div className='sign-in'>\n        <h2 className='title'>I already have an account</h2>\n        <span>Sign In with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput name=\"email\" type=\"email\" value={this.state.email} handleChange={this.handleChange} label=\"email\" required />\n          <FormInput name=\"password\" type=\"password\" value={this.state.password} handleChange={this.handleChange} label=\"password\" required />\n\n          <div className='buttons'>\n            <CustomButton type=\"submit\" value=\"Sign In\"> Sign In</CustomButton>\n            <CustomButton  type=\"button\" onClick={googleSignInStart} isGoogleSignIn> Sign In With Google</CustomButton>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart : () => dispatch(googleSignInStart()),\n  emailSignInStart : (email,password) => dispatch(emailSignInStart({email,password}))\n})\n\nexport default connect(null,mapDispatchToProps)(Signin);"]},"metadata":{},"sourceType":"module"}