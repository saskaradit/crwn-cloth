{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectColletionArray = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParameter => createSelector([selectCollections], collections => collections ? collections[collectionUrlParameter] : null);\nexport const selectIsColletion = createSelector([selectShop], shop => shop.isFetching);\nexport const isSelectionLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/Users/radsaskara/Documents/Udemy/ZTM React/crown-cloth/client/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectColletionArray","Object","keys","map","key","selectCollection","collectionUrlParameter","selectIsColletion","isFetching","isSelectionLoaded"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7CE,IAAI,IAAIA,IAAI,CAACE,WAFgC,CAAxC;AAKP,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,CAChD,CAACI,iBAAD,CADgD,EAEhDC,WAAW,IAAIA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAFrC,CAA3C;AAKP,OAAO,MAAMC,gBAAgB,GAAGC,sBAAsB,IACpDZ,cAAc,CACZ,CAACI,iBAAD,CADY,EAEZC,WAAW,IAAIA,WAAW,GAAIA,WAAW,CAACO,sBAAD,CAAf,GAA0C,IAFxD,CADT;AAMP,OAAO,MAAMC,iBAAiB,GAAGb,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7CE,IAAI,IAAIA,IAAI,CAACW,UAFgC,CAAxC;AAKP,OAAO,MAAMC,iBAAiB,GAAGf,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7CE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAF8B,CAAxC","sourcesContent":["import {createSelector} from 'reselect'\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n)\n\nexport const selectColletionArray = createSelector(\n  [selectCollections],\n  collections => collections ? Object.keys(collections).map(key => collections[key]) : []\n)\n\nexport const selectCollection = collectionUrlParameter => \n  createSelector(\n    [selectCollections],\n    collections => collections ?  collections[collectionUrlParameter] : null\n  )\n\nexport const selectIsColletion = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n)\n\nexport const isSelectionLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections\n)"]},"metadata":{},"sourceType":"module"}