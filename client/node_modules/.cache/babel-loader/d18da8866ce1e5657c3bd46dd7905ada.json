{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionType from './user.types';\nimport { signInFail, signInSuccess, signOutFail, signOutSuccess, signUpSuccess, signUpFail } from './user.action';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.config';\nexport function* getSnapshotFromUserAuth(userAuth, addtionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, addtionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFail(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      addtionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFail(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    addtionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, addtionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionType.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionType.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionType.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onUserSignOutStart() {\n  yield takeLatest(UserActionType.SIGN_OUT_START, onUserSignOutStart);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionType.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionType.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onUserSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/radsaskara/Documents/Udemy/ZTM React/crown-cloth/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionType","signInFail","signInSuccess","signOutFail","signOutSuccess","signUpSuccess","signUpFail","googleProvider","auth","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","addtionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onUserSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSaga"],"mappings":"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","sourcesContent":["import {takeLatest, put,all,call} from 'redux-saga/effects'\n\nimport UserActionType from './user.types'\nimport {signInFail, signInSuccess, signOutFail,signOutSuccess,signUpSuccess,signUpFail } from './user.action'\nimport {googleProvider,auth,createUserProfileDocument,getCurrentUser} from '../../firebase/firebase.config'\n\nexport function* getSnapshotFromUserAuth(userAuth,addtionalData){\n  try{\n    const userRef = yield call(createUserProfileDocument,userAuth,addtionalData)\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n  } catch (error) {\n    yield put(signInFail(error))\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\n\nexport function* signInWithEmail({payload:{email,password}}) {\n  try {\n    const {user} = yield auth.signInWithEmailAndPassword(email,password)\n    yield getSnapshotFromUserAuth(user)\n  } catch (error) {\n    yield put(signInFail(error))\n  }\n}\n\nexport function* isUserAuthenticated(){\n  try {\n    const userAuth = yield getCurrentUser();\n    if(!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth)\n\n  } catch (error) {\n    yield put(signInFail(error))\n  }\n}\n\nexport function* signOut(){\n  try {\n    yield auth.signOut()\n    yield put(signOutSuccess())\n  } catch (error) {\n    yield put(signOutFail(error))\n  }\n}\n\nexport function* signUp({payload: {email,password,displayName}}){\n  try {\n    const {user} = yield auth.createUserWithEmailAndPassword(email,password)\n    yield put(signUpSuccess({user,addtionalData:{displayName}}))\n  } catch (error) {\n    yield put(signUpFail(error))\n  }\n}\n\nexport function* signInAfterSignUp({payload:{user,addtionalData}}){\n  yield getSnapshotFromUserAuth(user,addtionalData)\n}\n\nexport function* onGoogleSignInStart () {\n  yield takeLatest(UserActionType.GOOGLE_SIGN_IN_START,signInWithGoogle)\n}\n\nexport function* onEmailSignInStart () {\n  yield takeLatest(UserActionType.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession (){\n  yield takeLatest(UserActionType.CHECK_USER_SESSION,isUserAuthenticated)\n}\n\nexport function* onUserSignOutStart (){\n  yield takeLatest(UserActionType.SIGN_OUT_START,onUserSignOutStart)\n}\n\nexport function* onSignUpStart () {\n   yield takeLatest(UserActionType.SIGN_UP_START,signUp)\n}\n\nexport function* onSignUpSuccess(){\n  yield takeLatest(UserActionType.SIGN_UP_SUCCESS,signInAfterSignUp)\n}\n\nexport function* userSaga(){\n  yield all([call(onGoogleSignInStart),call(onEmailSignInStart),call(onCheckUserSession),call(onUserSignOutStart)\n  ,call(onSignUpStart),call(onSignUpSuccess)])\n}"]},"metadata":{},"sourceType":"module"}