{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/radsaskara/Documents/Udemy/ZTM React/crown-cloth/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionOverview from '../../component/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertSnapshotToMap } from '../../firebase/firebase.config';\nimport { connect } from 'react-redux';\nimport { updateCollection } from '../../redux/shop/shop.action';\nimport withSpinner from '../../component/spinner/spinner.component';\nconst CollectionOverviewWithSpinner = withSpinner(CollectionOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollection\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertSnapshotToMap(snapshot);\n      updateCollection(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 71\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollection(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/Users/radsaskara/Documents/Udemy/ZTM React/crown-cloth/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionOverview","CollectionPage","firestore","convertSnapshotToMap","connect","updateCollection","withSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch","updateCollections","collectionsMap"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,kBAAP,MAA+B,qEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,SAAR,EAAmBC,oBAAnB,QAA8C,gCAA9C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAOC,WAAP,MAAwB,2CAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACN,kBAAD,CAAjD;KAAMO,6B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;MAAMO,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD4B;AAAA,SAIpCC,uBAJoC,GAIV,IAJU;AAAA;;AAMpCC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACT,MAAAA;AAAD,QAAqB,KAAKU,KAAhC;AACA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAgB;AACvC,YAAMC,aAAa,GAAGjB,oBAAoB,CAACgB,QAAD,CAA1C;AACAd,MAAAA,gBAAgB,CAACe,aAAD,CAAhB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAC;AAAT,OAAd;AACD,KAJD;AAKD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKR,KAArB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGT,KAAD,iBAAS,QAAC,6BAAD;AAA+B,UAAA,SAAS,EAAEH,OAA1C;AAAA,aAAuDG;AAAvD;AAAA;AAAA;AAAA;AAAA;AAArD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGT,KAAD,iBAAU,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEH,OAAtC;AAAA,aAAmDG;AAAnD;AAAA;AAAA;AAAA;AAAA;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA1BmC;;AA6BtC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACtCC,EAAAA,iBAAiB,EAAEC,cAAc,IAAIF,QAAQ,CAACrB,gBAAgB,CAACuB,cAAD,CAAjB;AADP,CAAL,CAAnC;;AAIA,eAAexB,OAAO,CAAC,IAAD,EAAMqB,kBAAN,CAAP,CAAiChB,QAAjC,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom'\nimport CollectionOverview from '../../component/collections-overview/collections-overview.component'\nimport CollectionPage from '../collection/collection.component'\nimport {firestore, convertSnapshotToMap} from '../../firebase/firebase.config'\nimport {connect} from 'react-redux'\nimport { updateCollection } from '../../redux/shop/shop.action';\n\nimport withSpinner from '../../component/spinner/spinner.component';\n\nconst CollectionOverviewWithSpinner = withSpinner(CollectionOverview)\nconst CollectionPageWithSpinner = withSpinner(CollectionPage)\n\nclass ShopPage extends React.Component{\n  state = {\n    loading: true\n  }\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount(){\n    const {updateCollection} = this.props;\n    const collectionRef = firestore.collection('collections');\n\n    collectionRef.onSnapshot(async snapshot=>{\n      const collectionMap = convertSnapshotToMap(snapshot)\n      updateCollection(collectionMap)\n      this.setState({loading:false})\n    })\n  }\n\n  render() {\n    const {match} = this.props\n    const {loading} = this.state\n    return(\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`} render={(props)=><CollectionOverviewWithSpinner isLoading={loading} {...props}/>} />\n        <Route path={`${match.path}/:collectionId`} render={(props)=> <CollectionPageWithSpinner isLoading={loading} {...props}/> } />\n      </div>\n    )\n  }\n} \n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollection(collectionsMap))\n})\n\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}