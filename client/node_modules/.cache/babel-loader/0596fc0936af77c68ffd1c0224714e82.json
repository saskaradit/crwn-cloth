{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionType from './user.types';\nimport { signInFail, signInSuccess } from './user.action';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.config';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionType.GOOGLE_SIGN_IN_START, onGoogleSignInStart);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionType.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/radsaskara/Documents/Udemy/ZTM React/crown-cloth/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionType","signInFail","signInSuccess","googleProvider","auth","createUserProfileDocument","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSaga"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAwBC,GAAxB,EAA4BC,IAA5B,QAAuC,oBAAvC;AAEA,OAAOC,cAAP,MAA2B,cAA3B;AACA,SAAQC,UAAR,EAAoBC,aAApB,QAAwC,eAAxC;AACA,SAAQC,cAAR,EAAuBC,IAAvB,EAA4BC,yBAA5B,QAA4D,gCAA5D;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA2C;AAChD,MAAG;AACD,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACM,yBAAD,EAA2BE,QAA3B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACK,aAAa,CAAC;AAACS,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACI,UAAU,CAACY,KAAD,CAAX,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA4B;AACjC,MAAI;AACF,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMX,IAAI,CAACY,eAAL,CAAqBb,cAArB,CAArB;AACA,UAAMG,uBAAuB,CAACS,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACI,UAAU,CAACY,KAAD,CAAX,CAAT;AACD;AACF;AAED,OAAO,UAAUI,eAAV,CAA2B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA3B,EAAuD;AAC5D,MAAI;AACF,UAAM;AAACL,MAAAA;AAAD,QAAS,MAAMX,IAAI,CAACiB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAArB;AACA,UAAMd,uBAAuB,CAACS,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACI,UAAU,CAACY,KAAD,CAAX,CAAT;AACD;AACF;AAED,OAAO,UAAUS,mBAAV,GAAiC;AACtC,QAAM1B,UAAU,CAACI,cAAc,CAACuB,oBAAhB,EAAqCD,mBAArC,CAAhB;AACD;AAED,OAAO,UAAUE,kBAAV,GAAgC;AACrC,QAAM5B,UAAU,CAACI,cAAc,CAACyB,mBAAhB,EAAqCR,eAArC,CAAhB;AACD;AAED,OAAO,UAAUS,QAAV,GAAoB;AACzB,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,EAA2BvB,IAAI,CAACyB,kBAAD,CAA/B,CAAD,CAAT;AACD","sourcesContent":["import {takeLatest, put,all,call} from 'redux-saga/effects'\n\nimport UserActionType from './user.types'\nimport {signInFail, signInSuccess} from './user.action'\nimport {googleProvider,auth,createUserProfileDocument} from '../../firebase/firebase.config'\n\nexport function* getSnapshotFromUserAuth(userAuth){\n  try{\n    const userRef = yield call(createUserProfileDocument,userAuth)\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n  } catch (error) {\n    yield put(signInFail(error))\n  }\n}\n\nexport function* signInWithGoogle(){\n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user)\n  } catch (error) {\n    yield put(signInFail(error))\n  }\n}\n\nexport function* signInWithEmail ({payload:{email,password}}) {\n  try {\n    const {user} = yield auth.signInWithEmailAndPassword(email,password)\n    yield getSnapshotFromUserAuth(user)\n  } catch (error) {\n    yield put(signInFail(error))\n  }\n}\n\nexport function* onGoogleSignInStart () {\n  yield takeLatest(UserActionType.GOOGLE_SIGN_IN_START,onGoogleSignInStart)\n}\n\nexport function* onEmailSignInStart () {\n  yield takeLatest(UserActionType.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSaga(){\n  yield all([call(onGoogleSignInStart),call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}