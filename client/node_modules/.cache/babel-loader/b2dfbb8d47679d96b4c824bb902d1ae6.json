{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './root-reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root.saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middleware.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/radsaskara/Documents/Udemy/ZTM React/crown-cloth/client/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","rootReducer","createSagaMiddleware","rootSaga","sagaMiddleware","middleware","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,UAAU,GAAG,CAACD,cAAD,CAAnB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAuB,aAA1B,EAAwC;AACtCH,EAAAA,UAAU,CAACI,IAAX,CAAgBV,MAAhB;AACD;;AAED,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAaH,eAAe,CAAC,GAAGO,UAAJ,CAA5B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAOE,EAAAA;AAAP,CAAf","sourcesContent":["import {createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport {persistStore} from 'redux-persist'\nimport rootReducer from './root-reducer'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from './root.saga'\n \nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware];\n\nif(process.env.NODE_ENV==='development'){\n  middleware.push(logger);\n}\n\nexport const store = createStore(rootReducer,applyMiddleware(...middleware));\n\nsagaMiddleware.run(rootSaga)\n\nexport const persistor = persistStore(store);\n\nexport default {store,persistor};"]},"metadata":{},"sourceType":"module"}